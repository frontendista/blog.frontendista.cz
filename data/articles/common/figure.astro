---
import { m } from "@/paraglide/messages";
import type { ImageMetadata } from "astro";
import { Picture } from "astro:assets";
import lqip from "lqip-modern";
import { join } from "node:path";
import Zoom from "react-medium-image-zoom";

export interface Props {
	alt: string;
	caption: string;
	image: ImageMetadata;
}

const { alt, image, caption } = Astro.props;

let source: string;
if (import.meta.env.MODE === "development") {
	source = image.src.replace("/@fs/", "").split("?")[0]!;
}
else {
	const cwd = process.cwd();
	const location = join(cwd, "dist", image.src);
	source = location;
}

const lqip_result = await lqip(source);
---

<figure data-figure>
	<Zoom
		client:visible
		a11yNameButtonZoom={m["image.zoom"]()}
		a11yNameButtonUnzoom={m["image.unzoom"]()}
		canSwipeToUnzoom={false}
	>
		<Picture
			data-image="loading"
			formats={["avif", "webp"]}
			src={image}
			{alt}
			pictureAttributes={{
				"data-picture": "loading",
				"style": {
					"--lqip": `url(${lqip_result.metadata.dataURIBase64})`
				}
			}}
		/>
	</Zoom>
	<figcaption data-figcaption={m["common.figure"]()}>{caption}</figcaption>
</figure>

<script>
document.querySelectorAll("[data-image]").forEach((element) => {
	const image = element as HTMLImageElement;

	const handleOnLoad = () => {
		image.setAttribute("data-image", "");

		const picture = image.closest("picture");

		if (picture) {
			picture.setAttribute("data-picture", "");
		}
	};

	if (image.complete) {
		handleOnLoad();
	}
	else {
		image.addEventListener("load", handleOnLoad);
	}
});
</script>
